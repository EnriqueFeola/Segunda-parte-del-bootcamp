{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CASA\\\\Desktop\\\\TrabajosSenpai\\\\Senpai Academy Bootcamp\\\\reacthook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\"; // The following component is an example of your existing Input Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Input = _ref => {\n  let {\n    label,\n    register,\n    required\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(label, {\n        required\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}; // you can use React.forwardRef to pass the ref too\n\n\n_c = Input;\nconst Select = /*#__PURE__*/React.forwardRef(_c2 = (_ref2, ref) => {\n  let {\n    onChange,\n    onBlur,\n    name,\n    label\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: name,\n      ref: ref,\n      onChange: onChange,\n      onBlur: onBlur,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"20\",\n        children: \"20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"30\",\n        children: \"30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n});\n_c3 = Select;\n\nconst App = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    alert(JSON.stringify(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      label: \"First Name\",\n      register: register,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      label: \"Age\",\n      ...register(\"Age\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"zkd3JmxRK/AmyiWtSfciHeYO5Zk=\", false, function () {\n  return [useForm];\n});\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"Select$React.forwardRef\");\n$RefreshReg$(_c3, \"Select\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useForm","Input","label","register","required","Select","forwardRef","ref","onChange","onBlur","name","App","handleSubmit","onSubmit","data","alert","JSON","stringify"],"sources":["C:/Users/CASA/Desktop/TrabajosSenpai/Senpai Academy Bootcamp/reacthook/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\n// The following component is an example of your existing Input Component\nconst Input = ({ label, register, required }) => (\n  <>\n    <label>{label}</label>\n    <input {...register(label, { required })} />\n  </>\n);\n\n// you can use React.forwardRef to pass the ref too\nconst Select = React.forwardRef(({ onChange, onBlur, name, label }, ref) => (\n  <>\n    <label>{label}</label>\n    <select name={name} ref={ref} onChange={onChange} onBlur={onBlur}>\n      <option value=\"20\">20</option>\n      <option value=\"30\">30</option>\n    </select>\n  </>\n));\n\nconst App = () => {\n  const { register, handleSubmit } = useForm();\n\n  const onSubmit = (data) => {\n    alert(JSON.stringify(data));\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Input label=\"First Name\" register={register} required />\n      <Select label=\"Age\" {...register(\"Age\")} />\n      <input type=\"submit\" />\n    </form>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB,C,CAEA;;;;;AACA,MAAMC,KAAK,GAAG;EAAA,IAAC;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAAD;EAAA,oBACZ;IAAA,wBACE;MAAA,UAAQF;IAAR;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,sBAAWC,QAAQ,CAACD,KAAD,EAAQ;QAAEE;MAAF,CAAR;IAAnB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADY;AAAA,CAAd,C,CAOA;;;KAPMH,K;AAQN,MAAMI,MAAM,gBAAGN,KAAK,CAACO,UAAN,OAAiB,QAAoCC,GAApC;EAAA,IAAC;IAAEC,QAAF;IAAYC,MAAZ;IAAoBC,IAApB;IAA0BR;EAA1B,CAAD;EAAA,oBAC9B;IAAA,wBACE;MAAA,UAAQA;IAAR;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,IAAI,EAAEQ,IAAd;MAAoB,GAAG,EAAEH,GAAzB;MAA8B,QAAQ,EAAEC,QAAxC;MAAkD,MAAM,EAAEC,MAA1D;MAAA,wBACE;QAAQ,KAAK,EAAC,IAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,KAAK,EAAC,IAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBAD8B;AAAA,CAAjB,CAAf;MAAMJ,M;;AAUN,MAAMM,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM;IAAER,QAAF;IAAYS;EAAZ,IAA6BZ,OAAO,EAA1C;;EAEA,MAAMa,QAAQ,GAAIC,IAAD,IAAU;IACzBC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAD,CAAL;EACD,CAFD;;EAIA,oBACE;IAAM,QAAQ,EAAEF,YAAY,CAACC,QAAD,CAA5B;IAAA,wBACE,QAAC,KAAD;MAAO,KAAK,EAAC,YAAb;MAA0B,QAAQ,EAAEV,QAApC;MAA8C,QAAQ;IAAtD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,KAAK,EAAC,KAAd;MAAA,GAAwBA,QAAQ,CAAC,KAAD;IAAhC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAO,IAAI,EAAC;IAAZ;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAdD;;GAAMQ,G;UAC+BX,O;;;MAD/BW,G;AAgBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}